name: 'Helm build tag and push'
description: 'Package an Helm Chart and push on a container registry'

on:
  workflow_call:
    secrets:
      ECMWF_DOCKER_REGISTRY_USERNAME:
        required: true
      ECMWF_DOCKER_REGISTRY_ACCESS_TOKEN:
        required: true

env:
    registryUrl: https://eccr.ecmwf.int
    helmRegustryUrl: eccr.ecmwf.int
    registryUsername: ${{ secrets.ECMWF_DOCKER_REGISTRY_USERNAME }}
    registryPassword: ${{ secrets.ECMWF_DOCKER_REGISTRY_ACCESS_TOKEN }}


jobs:
  building-helm-chart:
    runs-on:
      - ubuntu-latest
    steps:

      - name: Checkout chart-repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to harbor registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registryUrl }}
          username: ${{ env.registryUsername }}
          password: ${{ env.registryPassword }}

      - name: Set Helm Chart Variables
        shell: bash
        id: set_vars
        run: |
          output_folder=_output
          mkdir -p _output
          cp Chart.yaml $output_folder 2> /dev/null
          cp values.yaml $output_folder 2> /dev/null
          cp README.md $output_folder 2> /dev/null
          cp -R templates $output_folder 2> /dev/null

          chartName=$(awk '/^name:/{print $2}' Chart.yaml)
          chartVersion=$(awk '/^version:/{print $2}' Chart.yaml)

          echo "HELM_CHART_NAME=$chartName" >> $GITHUB_ENV
          echo "HELM_CHART_VERSION=$chartVersion" >> $GITHUB_ENV
          echo output-folder=$output_folder >> $GITHUB_ENV

          echo "HELM_CHART_NAME"
          echo "HELM_CHART_VERSION"

      - name: helm build and push
        shell: bash
        run: |
          docker run \
          --rm \
          --entrypoint=sh \
          -v $(pwd)/${{ env.output_folder }}:/work \
          -w /work \
          -e REGISTRY_URL=${{ env.registryUrl }} \
          -e REGISTRY_USERNAME=${{ env.registryUsername }} \
          -e REGISTRY_PASSWORD=${{ env.registryPassword }} \
          alpine/helm:latest \
          -c "echo '$REGISTRY_PASSWORD' | helm registry login eccr.ecmwf.int --username '$REGISTRY_USERNAME' --password-stdin"


      - name: cleanup
        shell: bash
        run: | 
          rm -rf ${{ steps.set_vars.outputs.output-folder }}